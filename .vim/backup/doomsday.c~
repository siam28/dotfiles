/*
 *  doomsday.c
 *  A program to test a function dayOfWeek which determines which
 *  day of the week a particular date falls on.
 *  (only for dates after the start of the Gregorian calendar).
 *
 *  Program stub created by Richard Buckland on 27/03/12
 *  This program by Charles Davis
 *  Freely licensed under Creative Commons CC-BY-3.0
 *
 *
 */
 
#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
 

#define THURSDAY 0
#define FRIDAY   1
#define SATURDAY 2
#define SUNDAY   3
#define MONDAY   4
#define TUESDAY  5
#define WEDNESDAY 6

#define JAN 1
#define FEB 2
#define MAR 3
#define APR 4
#define MAY 5
#define JUN 6
#define JUL 7
#define AUG 8
#define SEP 9
#define OCT 10
#define NOV 11
#define DEC 12
 
#define TRUE 1
#define FALSE 0
#define DAYS_PER_WEEK 7
 

int dayOfWeek (int doomsday, int leapYear, int month, int day);
int dday (int leapYear, int month, int day);
 

int main (int argc, char *argv[]) {
    assert (dayOfWeek (THURSDAY,  FALSE,  4,  4) == THURSDAY);
    assert (dayOfWeek (FRIDAY,    FALSE,  6,  6) == FRIDAY);
    assert (dayOfWeek (MONDAY,    FALSE,  8,  8) == MONDAY);
    assert (dayOfWeek (WEDNESDAY, FALSE, 10, 10) == WEDNESDAY);
    assert (dayOfWeek (FRIDAY,    FALSE, 12, 12) == FRIDAY);
    assert (dayOfWeek (THURSDAY,  FALSE,  9,  5) == THURSDAY);
    assert (dayOfWeek (FRIDAY,    FALSE,  5,  9) == FRIDAY);
    assert (dayOfWeek (SUNDAY,    FALSE,  7, 11) == SUNDAY);
    assert (dayOfWeek (TUESDAY,   FALSE, 11,  7) == TUESDAY);
    assert (dayOfWeek (WEDNESDAY, FALSE,  3,  7) == WEDNESDAY);

    assert (dayOfWeek (THURSDAY,  FALSE,  4,  5) == FRIDAY);
    assert (dayOfWeek (SATURDAY,  FALSE,  6,  5) == FRIDAY);
    assert (dayOfWeek (MONDAY,    FALSE,  8,  9) == TUESDAY);
    assert (dayOfWeek (WEDNESDAY, FALSE, 10,  9) == TUESDAY);
    assert (dayOfWeek (FRIDAY,    FALSE, 12, 20) == SATURDAY);
    assert (dayOfWeek (THURSDAY,  FALSE,  9,  9) == MONDAY);
    assert (dayOfWeek (FRIDAY,    FALSE,  5,  5) == MONDAY);
    assert (dayOfWeek (SUNDAY,    FALSE,  7,  7) == WEDNESDAY);
    assert (dayOfWeek (TUESDAY,   FALSE, 11, 11) == SATURDAY);
    assert (dayOfWeek (THURSDAY,  FALSE,  3, 30) == SATURDAY);

    assert (dayOfWeek (TUESDAY,   FALSE,  2,  28) == TUESDAY);
    assert (dayOfWeek (TUESDAY,   FALSE,  2,  27) == MONDAY);
    assert (dayOfWeek (THURSDAY,  FALSE,  1,  3)  == THURSDAY);
 
    printf ("all tests passed - You are awesome!\n");
    return EXIT_SUCCESS;
}
 
 
// given the doomsday for a year, and whether or not it is a
// leap year, this function return the day of the week for any
// given month and day in the year.
 
int dayOfWeek (int doomsday, int leapYear, int month, int day)
{
    int dayOfWeek;
    int date = dday(leapYear, month, day);

    // figure out calculation to determine dow if doomsday, day,
    // and month are known. don't repeat code for different months,
    // use separate functions. 
    if (day == date)
    {
	dayOfWeek = doomsday;
    }
    else if (day > date)
    {
	dayOfWeek = ((day - date) + doomsday) % 7;
    }
    else if (day < date)
    {
	dayOfWeek = doomsday - (date - day);
	/* if (dayOfWeek < 0) */
	/* { */
	/*     dayOfWeek = doomsday - (date - day) + 7; */
	/* } */
    }

    return (dayOfWeek);
}


// determines the date of doomsday to use in doomsday calculation per month.
// each year, 4/4, 6/6, 8/8, 10/10, 12/12, as well as 5/9, 9/5, 7/11, and 11/7
// all fall on the same day of the week. for jan and feb, it varies depending
// if it's a leap year or not
int dday (int leapYear, int month, int day)
{
    int date;

    if (leapYear)
    {
	if (month == JAN)
	{
	    date = 4;
	}
	else if (month == FEB)
	{
	    date = 1;
	}
    }
    else
    {
	if (month == JAN)
	{
	    date = 3;
	}
	else if (month == FEB)
	{
	    date = 0;
	}
    }
    if (month == MAR)
    {
	date = 7;
    }
    else if (month == APR)
    {
	date = 4;
    }
    else if (month == MAY)
    {
	date = 9; // 2
    }
    else if (month == JUN)
    {
	date = 6;
    }
    else if (month == JUL)
    {
	date = 11; // 4
    }
    else if (month == AUG)
    {
	date = 8; // 1
    }
    else if (month == SEP)
    {
	date = 5;
    }
    else if (month == OCT)
    {
	date = 10; // 3
    }
    else if (month == NOV)
    {
	date = 7; // 0
    }
    else if (month == DEC)
    {
	date = 12; // 5
    }

    return (date);
} 
